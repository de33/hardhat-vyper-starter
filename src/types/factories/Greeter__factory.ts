/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Greeter, GreeterInterface } from "../Greeter";

const _abi = [
  {
    stateMutability: "nonpayable",
    type: "constructor",
    inputs: [
      {
        name: "_greeting",
        type: "string",
      },
    ],
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    name: "greet",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
      },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    name: "setGreeting",
    inputs: [
      {
        name: "_greeting",
        type: "string",
      },
    ],
    outputs: [],
  },
];

const _bytecode =
  "0x60206102406000396000516020602082610240016000396000511161023b57602081610240016000396000518060405260208201602081610240016000396000516060525050506341304fac60c0526000600060208060e05260136080527f4465706c6f79696e67206120477265657465720000000000000000000000000060a05260808160e0018151808252602083016020830181518152505050805180602083010181600003601f163682375050601f19601f82516020010116905090508101905060dc6a636f6e736f6c652e6c6f675afa50604051806000556060516001555061013f6100fb63000000013961013f6000016300000001f3600436101561000d57610134565b60003560e01c3461013a5763cfae3217811861006857602080604052806040016000548082526020820160015481525050805180602083010181600003601f163682375050601f19601f825160200101169050810190506040f35b63a4136862811861013257600435600401602081351161013a578035806040526020820180356060525050506341304fac60c0526000600060208060e05260116080527f4368616e67696e67206772656574696e6700000000000000000000000000000060a05260808160e0018151808252602083016020830181518152505050805180602083010181600003601f163682375050601f19601f82516020010116905090508101905060dc6a636f6e736f6c652e6c6f675afa506040518060005560605160015550005b505b60006000fd5b600080fd005b600080fd";

type GreeterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GreeterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Greeter__factory extends ContractFactory {
  constructor(...args: GreeterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _greeting: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Greeter> {
    return super.deploy(_greeting, overrides || {}) as Promise<Greeter>;
  }
  override getDeployTransaction(
    _greeting: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_greeting, overrides || {});
  }
  override attach(address: string): Greeter {
    return super.attach(address) as Greeter;
  }
  override connect(signer: Signer): Greeter__factory {
    return super.connect(signer) as Greeter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GreeterInterface {
    return new utils.Interface(_abi) as GreeterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Greeter {
    return new Contract(address, _abi, signerOrProvider) as Greeter;
  }
}
